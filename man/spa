TC(8)                                                                     Linux                                                                     TC(8)



NOMBRE
       tc - muestra / manipula la configuración del control de tráfico

SINOPSIS
       tc qdisc [ add | change | replace | link ] dev DEV [ parent qdisc-id | root ] [ handle qdisc-id ] qdisc [ qdisc specific parameters ]

       tc class [ add | change | replace ] dev DEV parent qdisc-id [ classid class-id ] qdisc [ qdisc specific parameters ]

       tc  filter  [ add | change | replace ] dev DEV [ parent qdisc-id | root ] protocol protocol prio priority filtertype [ filtertype specific parame‐
       ters ] flowid flow-id

       tc [ FORMAT ] qdisc show [ dev DEV ]

       tc [ FORMAT ] class show dev DEV

       tc filter show dev DEV

FORMATO := { -s[estadísticas] | -d[detalles] | -r[aw] | -p[retty] | i[ec] }


DESCRIPCIÓN
       Tc es usado para configurar el Control de Tráfico en el kernel de Linux. El Control de Tráfico consiste en lo siguiente:


       MODELADO
              Cuando el tráfico está modelado, su tasa de transmisión está bajo control. El modelado puede consistir en algo más que reducir el ancho de banda disponible
              - también se utiliza para suavizar los picos de tráfico para un mejor comportamiento de la red. El modelado se hace efectivo en el tráfico de salida.


       PROGRAMACIÓN
              Mediante la programación de la transmisión de paquetes es posible mejorar la interactividad para el tráfico que la necesita sin dejar de garantizar
              el ancho de banda para otras transferencias. La reordenación es también llamada priorización y también ocurre sólo para el tráfico de salida.


       POLÍTICA
              Cuando el modelado se ocupa de la transmisión de tráfico, la política corresponde al tráfico entrante. Por lo tanto, la política aparece en el tráfico entrante.


       REDUCCIÓN
              El tráfico excedente a un ancho de banda establecido puede también ser reducido en el acto, tanto en el tráfico entrante como en el saliente.


       El procesamiento del tráfico está controlado por tres tipos de objetos: los qdiscs, las clases y los filtros.


QDISCS
       qdisc es la abreviatura de "queueing discipline" (colas de disciplina) y es fundamental para comprender el control del tráfico. Cuando el kernel necesita enviar un
       paquete a una interfaz, este es encolado en el qdisc configurado para esa interfaz. Inmediatamente después, el kernel trata de obtener tantos paquetes como le sea
       posible de la qdisc, para dárselos después al driver del adaptador de red.

       Una QDISC simple es una "pfifo", que no realiza ningún procesamiento y se limita a implementar una cola FIFO (first in, first out). Lo hace, sin embargo,
       almacenando tráfico cuando la interfaz de red no lo puede manejar momentáneamente.


CLASES
       Algunas qdiscs pueden contener clases, que contienen más qdiscs - el tráfico puede entonces ser encolado en alguna de las qdiscs internas,
       que están dentro de otras clases.  Cuando el kernel intenta desencolar un paquete de una qdisc con clase, este puede provenir de cualquiera de las clases.
       Una qdisc puede, por ejemplo, priorizar cierto tipo de tráfico mediante el desencolado de unas clases antes que de otras.


FILTROS
       Un filtro es utilizado por una qdisc con clase para determinar en qué clase será encolado un paquete. Siempre que el tráfico llega de una clase con subclases,
       este necesita ser clasificado. Varios métodos pueden ser empleados para ello. Uno de ellos son los filtros. Todos los filtros asociados a la clase son llamados,
       hasta que uno de ellos regresa con una veredicto. Si no hay veredicto, otros criterios pueden estar disponibles. Esto difiere por cada qdisc.

       Es importante tener en cuenta que los filtros residen dentro de las qdisc - estos no son dueños de lo que sucede.


QDISCS SIN CLASE
       Las qdiscs sin clase son:

       [p|b]fifo
              Son las qdiscs más simples. Tienen un comportamiento FIFO puro. Puede limitarse por número de paquetes o de bytes.

       pfifo_fast
              Son qdiscs standard para kernels que permiten "Rutador avanzado". Consisten en una cola de tres bandas que satisface flags de tipos de servicio,
							así como la prioridad que puede ser asignada a un paquete.

       red    La "Random Early Detection" (Detención Aleatoria Temprana) simula la congestión física mediante la reducción aleatoria de paquetes cuando se configura
							la asignación del ancho de banda. Es muy adecuado para las aplicaciones con un ancho de banda muy grande.

       sfq    El "Stochastic Fairness Queueing" (Encolado Estocástico Imparcial) reordena el tráfico encolado, por lo que cada "sesión" logra enviar un paquete.

       tbf    El "Token Bucket Filter" (Filtro de Cubetas de Símbolos) es adecuado para bajar lentamente el tráfico hasta una tasa de precisión configurada.
							Balancéa bien con grandes anchos de banda.

CONFIGURAR QDISCS SIN CLASE
       In the absence of classful qdiscs, classless qdiscs can only be attached at the root of a device. Full syntax:

       tc qdisc add dev DEV root QDISC QDISC-PARAMETERS

       To remove, issue

       tc qdisc del dev DEV root

       The pfifo_fast qdisc is the automatic default in the absence of a configured qdisc.


QDISCS CON CLASE
       The classful qdiscs are:

       CBQ    Class  Based  Queueing  implements a rich linksharing hierarchy of classes.  It contains shaping elements as well as prioritizing capabili‐
              ties. Shaping is performed using link idle time calculations based on average packet size and underlying link bandwidth. The latter may  be
              ill-defined for some interfaces.

       HTB    The  Hierarchy  Token  Bucket  implements a rich linksharing hierarchy of classes with an emphasis on conforming to existing practices. HTB
              facilitates guaranteeing bandwidth to classes, while also allowing specification of upper limits to inter-class sharing. It contains  shap‐
              ing elements, based on TBF and can prioritize classes.

       PRIO   The  PRIO qdisc is a non-shaping container for a configurable number of classes which are dequeued in order. This allows for easy prioriti‐
              zation of traffic, where lower classes are only able to send if higher ones have no packets available. To facilitate configuration, Type Of
              Service bits are honored by default.


