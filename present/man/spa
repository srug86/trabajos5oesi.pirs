TC(8)                                                                     Linux                                                                     TC(8)



NOMBRE
       tc - muestra / manipula la configuración del control de tráfico

SINOPSIS
       tc qdisc [ add | change | replace | link ] dev DEV [ parent qdisc-id | root ] [ handle qdisc-id ] qdisc [ qdisc specific parameters ]

       tc class [ add | change | replace ] dev DEV parent qdisc-id [ classid class-id ] qdisc [ qdisc specific parameters ]

       tc  filter  [ add | change | replace ] dev DEV [ parent qdisc-id | root ] protocol protocol prio priority filtertype [ filtertype specific parame‐
       ters ] flowid flow-id

       tc [ FORMAT ] qdisc show [ dev DEV ]

       tc [ FORMAT ] class show dev DEV

       tc filter show dev DEV

FORMATO := { -s[estadísticas] | -d[detalles] | -r[aw] | -p[retty] | i[ec] }


DESCRIPCIÓN
       Tc es usado para configurar el Control de Tráfico en el kernel de Linux. El Control de Tráfico consiste en lo siguiente:


       MODELADO
              Cuando el tráfico está modelado, su tasa de transmisión está bajo control. El modelado puede consistir en algo más que reducir el ancho de banda disponible
              - también se utiliza para suavizar los picos de tráfico para un mejor comportamiento de la red. El modelado se hace efectivo en el tráfico de salida.


       PROGRAMACIÓN
              Mediante la programación de la transmisión de paquetes es posible mejorar la interactividad para el tráfico que la necesita sin dejar de garantizar
              el ancho de banda para otras transferencias. La reordenación es también llamada priorización y también ocurre sólo para el tráfico de salida.


       POLÍTICA
              Cuando el modelado se ocupa de la transmisión de tráfico, la política corresponde al tráfico entrante. Por lo tanto, la política aparece en el tráfico entrante.


       REDUCCIÓN
              El tráfico excedente a un ancho de banda establecido puede también ser reducido en el acto, tanto en el tráfico entrante como en el saliente.


       El procesamiento del tráfico está controlado por tres tipos de objetos: los qdiscs, las clases y los filtros.


QDISCS
       qdisc es la abreviatura de "queueing discipline" (colas de disciplina) y es fundamental para comprender el control del tráfico. Cuando el kernel necesita enviar un
       paquete a una interfaz, este es encolado en el qdisc configurado para esa interfaz. Inmediatamente después, el kernel trata de obtener tantos paquetes como le sea
       posible de la qdisc, para dárselos después al driver del adaptador de red.

       Una QDISC simple es una "pfifo", que no realiza ningún procesamiento y se limita a implementar una cola FIFO (first in, first out). Lo hace, sin embargo,
       almacenando tráfico cuando la interfaz de red no lo puede manejar momentáneamente.


CLASES
       Algunas qdiscs pueden contener clases, que contienen más qdiscs - el tráfico puede entonces ser encolado en alguna de las qdiscs internas,
       que están dentro de otras clases.  Cuando el kernel intenta desencolar un paquete de una qdisc con clase, este puede provenir de cualquiera de las clases.
       Una qdisc puede, por ejemplo, priorizar cierto tipo de tráfico mediante el desencolado de unas clases antes que de otras.


FILTROS
       Un filtro es utilizado por una qdisc con clase para determinar en qué clase será encolado un paquete. Siempre que el tráfico llega de una clase con subclases,
       este necesita ser clasificado. Varios métodos pueden ser empleados para ello. Uno de ellos son los filtros. Todos los filtros asociados a la clase son llamados,
       hasta que uno de ellos regresa con una veredicto. Si no hay veredicto, otros criterios pueden estar disponibles. Esto difiere por cada qdisc.

       Es importante tener en cuenta que los filtros residen dentro de las qdisc - estos no son dueños de lo que sucede.


QDISCS SIN CLASE
       Las qdiscs sin clase son:

       [p|b]fifo
              Son las qdiscs más simples. Tienen un comportamiento FIFO puro. Puede limitarse por número de paquetes o de bytes.

       pfifo_fast
              Son qdiscs standard para kernels que permiten "Rutador avanzado". Consisten en una cola de tres bandas que satisface flags de tipos de servicio,
							así como la prioridad que puede ser asignada a un paquete.

       red    La "Random Early Detection" (Detención Aleatoria Temprana) simula la congestión física mediante la reducción aleatoria de paquetes cuando se configura
							la asignación del ancho de banda. Es muy adecuado para las aplicaciones con un ancho de banda muy grande.

       sfq    El "Stochastic Fairness Queueing" (Encolado Estocástico Imparcial) reordena el tráfico encolado, por lo que cada "sesión" logra enviar un paquete.

       tbf    El "Token Bucket Filter" (Filtro de Cubetas de Símbolos) es adecuado para bajar lentamente el tráfico hasta una tasa de precisión configurada.
							Balancéa bien con grandes anchos de banda.

CONFIGURAR QDISCS SIN CLASE
       A falta de las qdisc con clase, las qdiscs sin clase pueden sólo ser agregadas en al raíz de un dispositivo. Sintaxis completa:

       tc qdisc add dev DEV root QDISC QDISC-PARAMETERS

       Para eliminarlas, poner:

       tc qdisc del dev DEV root

       En ausencia de una qdisc configurada, se tomará por defecto una qdisc pfifo_fast.

QDISCS CON CLASE
       Las qdisc con clase son:

       CBQ    El Class Based Queueing (Clase Basada en Colas) implementa una rica jerarquía de clases de enlaces de intercambio. Esta contiene el modelado	de elementos,
							así como la capacidad de priorizar.	El modelado se realiza mediante el cálculo del tiempo de enlace inactivo basado en el tamaño medio de paquete y el
							ancho de banda del enlace subyacente.	Este último, puede estar mal definido para algunas interfaces.

       HTB    El Hierarchy Token Bucket (Cubo de la jerarquía de símbolos) implementa una rica jerarquía de clases de enlaces de intercambio haciendo énfasis en lo acontecido en las prácticas existentes.
							HTB permite garantizar el ancho de banda de las clases, al mismo tiempo permite la especificación del límite máximo de inter-clases compartidas. Contiene modelado de elementos,
							basados en TBF y pueden priorizar clases.

       PRIO   La PRIO qdisc es un contenedor no modelado de un número configurable de clases que son desencoladas en orden. Esto permite una fácil
							priorización del tráfico, donde las clases más bajas pueden enviar sólo si las más altas tienen paquetes disponibles. Para facilitar la configuración,
							Los bits del Type of Service (Tipo de Servicio) son satisfechas por defecto.

TEORÍA DE LA ACCIÓN 
        Las clases forman un árbol, donde cada clase tiene un solo padre. 
        Una clase puede tener varios hijos. Algunos qdisc permiten además 
        añadir clases tiempo de ejecución (CBQ, HTB) mientras que otras (PRIO) 
        se crean con un número estático de los niños.

        Qdisc que permiten la adición dinámica de clases puede tener cero o más
        subclases en las que el tráfico puede ser en cola. 

        Además, cada clase contiene una qdisc de hojas que por defecto tiene un
        comportamiento pfifo aunque otra qdisc se puede conectar en su lugar. 
        Esta qdisc puede volver a tener clases, pero cada clase sólo puede 
        tener una qdisc hoja. 

        Cuando un paquete entra en una qdisc con clases, se puede clasificar en 
        una de dichas clases. Tres criterios están disponibles, aunque no todas 
        las qdisc se usan las tres:

        filtros de tc 
            Si los filtros de tc se unen a una clase, se les consulta primero 
            para obtener las instrucciones pertinentes. Los filtros pueden 
            coincidir en todo los campos de la cabecera del paquete, así como 
            en la marca del cortafuegos aplicada por ipchains o iptables.

        Tipo de Servicio
            Algunos qdisc han incluido reglas de clasificación de paquetes 
            basada ​​en el campo TOS. 
              

       skb->prioridad 
              los programas de espacio de usuario puede codificar un 
              identificador de clase en el campo 'skb->priority' con la opción 
              SO_PRIORITY. 

       Cada nodo dentro del árbol puede tener sus propios filtros, pero los 
       filtros de nivel también puede apuntar directamente a las clases bajas. 

       Si la clasificación no tuvo éxito, los paquetes se pondrán en la cola 
       del nodo qdisc hoja correspondiente a esa clase. No obstante, compruebe 
       el manual específico de qdisc para más detalles. 

NOMBRADO
       Todas las qdisc, clases y filtros tienen identificadores, que puede ser 
        especificados o se asignarán de forma automática. 

       El identificador esta compuesto por un número principal y un número de 
       menor importancia, separados por dos puntos. 


       QDISC    a una qdisc, que potencialmente pueden tener hijos, se le asigna 
                un número mayor, llamada 'handle', dejando el espacio de 
                nombres del número de menor importancia disponible para las 
                clases. El Handel se expresa como '10: '. Se acostumbra a 
                asignar explícitamente un 'handle' a los qdisc esperan tener 
                hijos. 


       CLASES 
                Las clases que residen en una parte de un qdisc comparten su 
                número de mayor importancia, pero cada uno tiene un número de 
                menor importancia independiente denominado "classid" que no 
                tiene relación con las clases padre, sólo a sus qdisc padres. 
                Se aplica la misma forma de nombrado que a los qdisc.


       FILTROS 
                Los filtros tienen la tercera parte del identificador, que sólo
                es necesario cuando se utiliza un filtro hash jerarquíco. 

UNIDADES 
        Todos los parámetros aceptan un número de punto flotante, posiblemente 
        seguido de una unidad. 

       Los anchos de banda o las tasas se pueden especificar en: 

       kbps                     kilobytes por segundo 

       mbps                     megabytes por segundo 

       Kbit                     kilobits por segundo 

       Megabits                 Mbits por segundo 

       bps o un número desnudo  Bytes por segundo 


       Las cantidades de datos se puede especificar en: 

       kb o k                   Kilobytes 

       MB o m                   Megabytes 

       mbit                     Megabits

       kbit                     Kilobits

       b o un número desnudo    Bytes. 

       Períodos de tiempo puede ser especificado en: 

       s, sec o secs 
              segundo 

       ms, msec o msecs 
              Milisegundos 

       us, usec, usecs o un número desnudo 
              Microsegundos. 

COMANDOS TC 
       Los comandos siguientes están disponibles para qdisc, clases y filtros: 

       add  Añade un qdisc, clase o filtro a un nodo. Para todas las entidades,
            un padre debe ser aprobado, ya sea aprobando su ID o por estar 
            conectado directamente a la raíz de un dispositivo. 
            Al crear un qdisc o un filtro, puede ser nombrado con el parametro 
            'handler'. Una clase se nombra con el parametro 'classid'. 


       remove   Un qdisc puede ser removido mediante la especificación de su 
                'handler', que también puede ser 'root'. Todas las subclases y 
                sus qdisc node se eliminan automáticamente, así como cualquier 
                filtro unido a ellos. 


       change   Algunas entidades se pueden modificar 'in situ'. Comparte la 
                sintaxis de 'add', con la excepción de que el 'handler' no se 
                puede cambiar y no pueden cambiar los padres. En otros 
                es decir, el cambio no puede mover un nodo. 


       replace 
              Realiza una operación casi atómica (quitar o agregar) sobre un 
              identificador de nodo existente. Si el nodo no existe aún, se crea. 


       link   Sólo disponible para qdisc. Realiza una sustitución donde el nodo
              debe existir ya.


FORMATO 
       El comando show tiene opciones de formato adicionales: 


 -s, -stats, -statistic     muestra más estadísticas sobre el uso de paquetes. 


-d, -details                salida de información más detallada sobre las tasas
                            y tamaños de las casillas. 


-r, -raw                    muestra valores de salida hexadecimales en bruto 
                            para los 'handles'. 


-p, -pretty                 decodifica los filtros de offset y valores de la 
                            máscara en sus equivalentes comandos de filtro 
                            basados en TCP / IP. 


-iec                        muestra las tasas en unidades de IEC (es decir, 
                            1 K = 1024). 
